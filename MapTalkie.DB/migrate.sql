CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory"
(
    "MigrationId"    character varying(150) NOT NULL,
    "ProductVersion" character varying(32)  NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;


DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE EXTENSION IF NOT EXISTS postgis;
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE TABLE "AspNetRoles"
            (
                "Id"               text                   NOT NULL,
                "Name"             character varying(256) NULL,
                "NormalizedName"   character varying(256) NULL,
                "ConcurrencyStamp" text                   NULL,
                CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
            );
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE TABLE "AspNetUsers"
            (
                "Id"                      text                     NOT NULL,
                "UsesPrivateLocation"     boolean                  NOT NULL,
                "AllowsNonFriendMessages" boolean                  NOT NULL,
                "UserName"                character varying(256)   NULL,
                "NormalizedUserName"      character varying(256)   NULL,
                "Email"                   character varying(256)   NULL,
                "NormalizedEmail"         character varying(256)   NULL,
                "EmailConfirmed"          boolean                  NOT NULL,
                "PasswordHash"            text                     NULL,
                "SecurityStamp"           text                     NULL,
                "ConcurrencyStamp"        text                     NULL,
                "PhoneNumber"             text                     NULL,
                "PhoneNumberConfirmed"    boolean                  NOT NULL,
                "TwoFactorEnabled"        boolean                  NOT NULL,
                "LockoutEnd"              timestamp with time zone NULL,
                "LockoutEnabled"          boolean                  NOT NULL,
                "AccessFailedCount"       integer                  NOT NULL,
                CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id")
            );
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE TABLE "AspNetRoleClaims"
            (
                "Id"         integer GENERATED BY DEFAULT AS IDENTITY,
                "RoleId"     text NOT NULL,
                "ClaimType"  text NULL,
                "ClaimValue" text NULL,
                CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
                CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
            );
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE TABLE "AspNetUserClaims"
            (
                "Id"         integer GENERATED BY DEFAULT AS IDENTITY,
                "UserId"     text NOT NULL,
                "ClaimType"  text NULL,
                "ClaimValue" text NULL,
                CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
                CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
            );
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE TABLE "AspNetUserLogins"
            (
                "LoginProvider"       text NOT NULL,
                "ProviderKey"         text NOT NULL,
                "ProviderDisplayName" text NULL,
                "UserId"              text NOT NULL,
                CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
                CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
            );
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE TABLE "AspNetUserRoles"
            (
                "UserId" text NOT NULL,
                "RoleId" text NOT NULL,
                CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
                CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
                CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
            );
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE TABLE "AspNetUserTokens"
            (
                "UserId"        text NOT NULL,
                "LoginProvider" text NOT NULL,
                "Name"          text NOT NULL,
                "Value"         text NULL,
                CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
                CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
            );
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE TABLE "Attachments"
            (
                "Id"     uuid NOT NULL,
                "UserId" text NOT NULL,
                CONSTRAINT "PK_Attachments" PRIMARY KEY ("Id"),
                CONSTRAINT "FK_Attachments_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
            );
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE TABLE "BlacklistedUsers"
            (
                "UserId"          text NOT NULL,
                "BlacklistedById" text NOT NULL,
                CONSTRAINT "PK_BlacklistedUsers" PRIMARY KEY ("BlacklistedById", "UserId"),
                CONSTRAINT "FK_BlacklistedUsers_AspNetUsers_BlacklistedById" FOREIGN KEY ("BlacklistedById") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE,
                CONSTRAINT "FK_BlacklistedUsers_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
            );
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE TABLE "FriendRequests"
            (
                "FromId" text NOT NULL,
                "ToId"   text NOT NULL,
                CONSTRAINT "PK_FriendRequests" PRIMARY KEY ("FromId", "ToId"),
                CONSTRAINT "FK_FriendRequests_AspNetUsers_FromId" FOREIGN KEY ("FromId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE,
                CONSTRAINT "FK_FriendRequests_AspNetUsers_ToId" FOREIGN KEY ("ToId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
            );
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE TABLE "Posts"
            (
                "Id"                  bigint GENERATED BY DEFAULT AS IDENTITY,
                "Text"                text                     NOT NULL,
                "UserId"              text                     NOT NULL,
                "Location"            geometry(point)          NOT NULL,
                "CreatedAt"           timestamp with time zone NOT NULL,
                "UpdatedAt"           timestamp with time zone NULL,
                "Available"           boolean                  NOT NULL,
                "IsOriginalLocation"  boolean                  NOT NULL,
                "SharedId"            bigint                   NULL,
                "CachedLikesCount"    integer                  NOT NULL,
                "CachedSharesCount"   integer                  NOT NULL,
                "CachedCommentsCount" integer                  NOT NULL,
                "CachedFreshRank"     double precision         NOT NULL,
                "CacheUpdatedAt"      timestamp with time zone NOT NULL,
                CONSTRAINT "PK_Posts" PRIMARY KEY ("Id"),
                CONSTRAINT "FK_Posts_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE,
                CONSTRAINT "FK_Posts_Posts_SharedId" FOREIGN KEY ("SharedId") REFERENCES "Posts" ("Id")
            );
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE TABLE "PrivateConversationParticipants"
            (
                "SenderId"          text                     NOT NULL,
                "RecipientId"       text                     NOT NULL,
                "LastMessageReadAt" timestamp with time zone NOT NULL,
                "CreatedAt"         timestamp with time zone NOT NULL,
                "IsActive"          boolean                  NOT NULL,
                CONSTRAINT "PK_PrivateConversationParticipants" PRIMARY KEY ("SenderId", "RecipientId"),
                CONSTRAINT "FK_PrivateConversationParticipants_AspNetUsers_RecipientId" FOREIGN KEY ("RecipientId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE,
                CONSTRAINT "FK_PrivateConversationParticipants_AspNetUsers_SenderId" FOREIGN KEY ("SenderId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
            );
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE TABLE "PrivateMessages"
            (
                "Id"        bigint GENERATED BY DEFAULT AS IDENTITY,
                "SenderId"  text                     NOT NULL,
                "Text"      text                     NOT NULL,
                "CreatedAt" timestamp with time zone NOT NULL,
                "UpdatedAt" timestamp with time zone NULL,
                "Available" boolean                  NOT NULL,
                "Read"      boolean                  NOT NULL,
                CONSTRAINT "PK_PrivateMessages" PRIMARY KEY ("Id"),
                CONSTRAINT "FK_PrivateMessages_AspNetUsers_SenderId" FOREIGN KEY ("SenderId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
            );
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE TABLE "RefreshTokens"
            (
                "Id"        text                     NOT NULL,
                "ExpiresAt" timestamp with time zone NOT NULL,
                "IsBlocked" boolean                  NOT NULL,
                "UserId"    text                     NOT NULL,
                CONSTRAINT "PK_RefreshTokens" PRIMARY KEY ("Id"),
                CONSTRAINT "FK_RefreshTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
            );
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE TABLE "PostComments"
            (
                "Id"        bigint GENERATED BY DEFAULT AS IDENTITY,
                "SenderId"  text                     NOT NULL,
                "Text"      text                     NOT NULL,
                "CreatedAt" timestamp with time zone NOT NULL,
                "UpdatedAt" timestamp with time zone NOT NULL,
                "Available" boolean                  NOT NULL,
                "PostId"    bigint                   NOT NULL,
                "ReplyToId" bigint                   NULL,
                CONSTRAINT "PK_PostComments" PRIMARY KEY ("Id"),
                CONSTRAINT "FK_PostComments_AspNetUsers_SenderId" FOREIGN KEY ("SenderId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE,
                CONSTRAINT "FK_PostComments_PostComments_ReplyToId" FOREIGN KEY ("ReplyToId") REFERENCES "PostComments" ("Id"),
                CONSTRAINT "FK_PostComments_Posts_PostId" FOREIGN KEY ("PostId") REFERENCES "Posts" ("Id") ON DELETE CASCADE
            );
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE TABLE "PostLikes"
            (
                "UserId"    text                     NOT NULL,
                "PostId"    bigint                   NOT NULL,
                "CreatedAt" timestamp with time zone NOT NULL,
                CONSTRAINT "PK_PostLikes" PRIMARY KEY ("UserId", "PostId"),
                CONSTRAINT "FK_PostLikes_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE,
                CONSTRAINT "FK_PostLikes_Posts_PostId" FOREIGN KEY ("PostId") REFERENCES "Posts" ("Id") ON DELETE CASCADE
            );
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE TABLE "PrivateMessageReceipts"
            (
                "UserIdA"   text    NOT NULL,
                "UserIdB"   text    NOT NULL,
                "MessageId" bigint  NOT NULL,
                "UserAId"   text    NULL,
                "UserBId"   text    NULL,
                "OutFlag"   boolean NOT NULL,
                CONSTRAINT "PK_PrivateMessageReceipts" PRIMARY KEY ("UserIdA", "UserIdB", "MessageId"),
                CONSTRAINT "FK_PrivateMessageReceipts_AspNetUsers_UserAId" FOREIGN KEY ("UserAId") REFERENCES "AspNetUsers" ("Id"),
                CONSTRAINT "FK_PrivateMessageReceipts_AspNetUsers_UserBId" FOREIGN KEY ("UserBId") REFERENCES "AspNetUsers" ("Id"),
                CONSTRAINT "FK_PrivateMessageReceipts_PrivateMessages_MessageId" FOREIGN KEY ("MessageId") REFERENCES "PrivateMessages" ("Id") ON DELETE CASCADE
            );
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE TABLE "PostCommentLikes"
            (
                "UserId"    text                     NOT NULL,
                "CommentId" bigint                   NOT NULL,
                "CreatedAt" timestamp with time zone NOT NULL,
                CONSTRAINT "PK_PostCommentLikes" PRIMARY KEY ("UserId", "CommentId"),
                CONSTRAINT "FK_PostCommentLikes_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE,
                CONSTRAINT "FK_PostCommentLikes_PostComments_CommentId" FOREIGN KEY ("CommentId") REFERENCES "PostComments" ("Id") ON DELETE CASCADE
            );
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE INDEX "IX_Attachments_UserId" ON "Attachments" ("UserId");
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE INDEX "IX_BlacklistedUsers_UserId" ON "BlacklistedUsers" ("UserId");
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE INDEX "IX_FriendRequests_ToId" ON "FriendRequests" ("ToId");
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE INDEX "IX_PostCommentLikes_CommentId" ON "PostCommentLikes" ("CommentId");
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE INDEX "IX_PostComments_PostId" ON "PostComments" ("PostId");
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE INDEX "IX_PostComments_ReplyToId" ON "PostComments" ("ReplyToId");
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE INDEX "IX_PostComments_SenderId" ON "PostComments" ("SenderId");
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE INDEX "IX_PostLikes_PostId" ON "PostLikes" ("PostId");
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE INDEX "IX_Posts_SharedId" ON "Posts" ("SharedId");
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE INDEX "IX_Posts_UserId" ON "Posts" ("UserId");
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE INDEX "IX_PrivateConversationParticipants_RecipientId" ON "PrivateConversationParticipants" ("RecipientId");
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE INDEX "IX_PrivateMessageReceipts_MessageId" ON "PrivateMessageReceipts" ("MessageId");
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE INDEX "IX_PrivateMessageReceipts_UserAId" ON "PrivateMessageReceipts" ("UserAId");
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE INDEX "IX_PrivateMessageReceipts_UserBId" ON "PrivateMessageReceipts" ("UserBId");
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE INDEX "IX_PrivateMessages_SenderId" ON "PrivateMessages" ("SenderId");
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            CREATE INDEX "IX_RefreshTokens_UserId" ON "RefreshTokens" ("UserId");
        END IF;
    END
$EF$;

DO
$EF$
    BEGIN
        IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20211129113802_InitialCreate') THEN
            INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
            VALUES ('20211129113802_InitialCreate', '6.0.0');
        END IF;
    END
$EF$;
COMMIT;

